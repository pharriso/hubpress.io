<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Cloud and Automation]]></title><description><![CDATA[Focusing mainly on Red Hat products in the Cloud and Automat ion space. Currently working as a Solution Architect for Red Hat in the UK.]]></description><link>http://cloudautomation.pharriso.co.uk</link><image><url>images/background.jpg</url><title>Cloud and Automation</title><link>http://cloudautomation.pharriso.co.uk</link></image><generator>RSS for Node</generator><lastBuildDate>Tue, 08 Jan 2019 22:01:49 GMT</lastBuildDate><atom:link href="http://cloudautomation.pharriso.co.uk/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[RHV Disaster Recovery - Part I]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Since the release of Red Hat Virtualisation (RHV) 4.1 back in 2017 we have seen the inclusion of Disaster Recovery (DR) solutions. The aim of these solutions is to allow customers to deploy their RHV infrastructure to span multiple sites and allow failover of virtual machines in the event of a disaster. This post will take a look at these Disaster Recovery solutions.</p>
</div>
<div class="paragraph">
<p>It is worth noting that these DR solutions are part of the core RHV product and are NOT part of a separate subscription offering. There is no per Virtual Machine (VM) cost or similar charge for protecting your workloads.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_overview">Overview</h2>
<div class="sectionbody">
<div class="paragraph">
<p>RHV 4.1 was released back in 2017 and we introduced an Active/Active implementation in which we effectively deploy a stretch cluster spanning two sites.</p>
</div>
<div class="paragraph">
<p>With the release of RHV 4.2 in May 2018 we introduced additional disaster recovery capabilities. We can now deploy an Active/Passive architecture spanning two sites.</p>
</div>
<div class="paragraph">
<p>In the event of a disaster we can failover VM&#8217;s from a Primary site to a Secondary DR site. We use the power of Ansible automation to achieve this.</p>
</div>
<div class="paragraph">
<p>Once the issues with the primary site are resolved, we can then perform an automated failback to return our virtual machines to our primary site.</p>
</div>
<div class="paragraph">
<p>Let&#8217;s take a look at the different implementation options.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_active_active">Active/Active</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Active/Active architecture can span two sites. With this implementation we deploy a single RHV cluster with RHV hosts spanning both sites in a stretch cluster configuration. A single RHV Manager is responsible for managing both sites. The RHV Manager itself could be self hosted or standalone.</p>
</div>
<div class="paragraph">
<p>As both sites are active at the same time and VM&#8217;s can effectively run at either site at any given time we require synchronously replicated storage that is writeable at both sites at the same time.</p>
</div>
<div class="paragraph">
<p>In addition to the storage replication we also need a stretched network between sites. As we are deploying a single cluster across both sites we need all of the RHV hosts to be in the same Layer 2 network segment. Also VM networks need to be stretched between sites so that that VM&#8217;s can migrate or failover to the secondary site and maintain network connectivity.</p>
</div>
<div class="paragraph">
<p>VM to RHV Host affinity can be used to ensure VM&#8217;s are running in the Primary datacenter where possible and only failed over as part of a disaster.</p>
</div>
<div class="paragraph">
<p>In the event of a disaster in the Primary site, any VM&#8217;s marked as "highly available" will automatically be restarted in the Disaster site without any administrator intervention.</p>
</div>
<div class="paragraph">
<p>The nice thing about the Active/Active setup is that we just rely on native RHV HA to fail VM&#8217;s between sites. It does rely on a storage array that can provide write access to both sites with replication. An example of this would be something like EMC VPLEX.</p>
</div>
<div class="paragraph">
<p>Here is what an Active/Active configuration looks like.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://cloudautomation.pharriso.co.uk/images/RHV%20DR%20Active%20Active%201.png" alt="RHV DR Active Active 1">
</div>
</div>
<div class="paragraph">
<p>In the event of a failure at the Primary site, any VM&#8217;s marked as highly available will automatically restart on RHV hosts in the DR site.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://cloudautomation.pharriso.co.uk/images/RHV%20DR%20Active%20Active%202.png" alt="RHV DR Active Active 2">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_active_passive">Active/Passive</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Active/Passive configuration can also be used across two sites. As the name suggests, only one site is active at any given time. In the event of a disaster, VM&#8217;s are failed over from the Primary site to the Disaster site. Once the Primary site is recovered we can then failback. Both failover and failback occur in an automated fashion using Ansible.</p>
</div>
<div class="paragraph">
<p>Unlike the Active/Active architecture, each site must maintain its own RHV Manager which manages the RHV hosts, storage and networks for that site.</p>
</div>
<div class="paragraph">
<p>From the storage perspective we require replicated storage between sites. However, the storage is only ever attached to one RHV site at a time so it does not need to be writeable at both sites simultaneously.</p>
</div>
<div class="paragraph">
<p>The same VM networks need to be available in both sites so that VM&#8217;s that are failed over can be re-attached to the network.</p>
</div>
<div class="paragraph">
<p>Here is what an Active/Passive configuration looks like.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://cloudautomation.pharriso.co.uk/images/RHV%20DR%20Active%20Passive%201.png" alt="RHV DR Active Passive 1">
</div>
</div>
<div class="paragraph">
<p>In the event of a disaster at the Primary site then we need to ensure that any replication of storage is stopped and that the storage is changed to read/write at the DR site and readonly at Primary site. An administrator can then initiate a failover of VM&#8217;s to the DR site.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://cloudautomation.pharriso.co.uk/images/RHV%20DR%20Active%20Passive%202.png" alt="RHV DR Active Passive 2">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_summary">Summary</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Since the release of RHV 4.2 we now have two options for providing Disaster Recovery for our VM&#8217;s.</p>
</div>
<div class="paragraph">
<p>The Active/Active configuration allows us to easily fail workloads between sites using VM HA. However, it does rely on storage which is read/write at both sites at the same time as well as being synchronously replicated.</p>
</div>
<div class="paragraph">
<p>The Active/Passive solution only requires replicated storage in read/write at one site at a time. However, failover requires manual intervention to switch storage replication and also initiate the VM failover via Ansible.</p>
</div>
<div class="paragraph">
<p>In the next part of this post we will take a look at how to setup RHV DR in an Active/Passive configuration and how to perform failover and failback.</p>
</div>
</div>
</div>]]></description><link>http://cloudautomation.pharriso.co.uk/2019/01/08/RHV-Disaster-Recovery-Part-I.html</link><guid isPermaLink="true">http://cloudautomation.pharriso.co.uk/2019/01/08/RHV-Disaster-Recovery-Part-I.html</guid><pubDate>Tue, 08 Jan 2019 00:00:00 GMT</pubDate></item></channel></rss>